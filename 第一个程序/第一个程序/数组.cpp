#include<stdio.h>
//sizeof计算变量类型所占空间大小
//语法：sizeof(a)或sizeof(int)
//a前后的括号可省略但是int不可以
int main2() {
	int arr[10] = { 0 };//10个整型元素的数组
	//10*sizeof(int)=40
	printf("%d\n", sizeof(arr));
	//可用于计算数组的元素数量
	return 0;

}

////单目操作符
////双目操作符
////三目操作符
//int main() {
//	//双目操作符左右有字符，例如c=a+b
//	int a = 0;
//	//0代表假，1代表真
//	printf("%d\n", a);
//	printf("%d\n", !a);//！是逻辑反操作符
//	return 0;
//}

////赋值操作符
////=赋值，==判断相等
//int main() {
//	int a = 10;
//	a += 10;//意为a=a+10
//    a -= 10;//意为a=a-20
//	//复合赋值符
//	return 0;
//}

//移(2进制）位操作符
//位（2进制）操作符%按位与|按位或^按位异或
//int main() {
//	//<<左移操作符
//	//>>右移操作符
//	int a = 1;
//	//整型占1个字节即32bit位
//	int b = a<<2;
//	//以上指使2进制位左移2位最左边的去掉，最右边的补0
//	//1--00000000000000000000000000000001
//	//左移两位后得00000000000000000000000000000100即2的2次方
//	printf("%d\n", b);
//	//按位与
//	int c = a & b;
//	//a001
//	//b100
//	// 得c000
//	//真值表（0为假，1为真）
//	//得c=a&b=000
//	printf("%d\n", c);
//	//按位或
//	int d = a | b;
//	//001
//	//100
//	//101即1*2的平方加上1*2的0方
//	printf("%d\n", d);
//	//按位异或（对应的2进制位相同为0，反之为1）
//	// e=010
//	int e = a ^ b;
//	printf("%d\n", e);
//    return 0;
//}


//算术操作符
//+加-减*乘/取商%取模
//int main() {
//	int a = 5/2;
//	int b = 5 % 2;
//	printf("%d\n", b);
//	printf("%d\n",a);
//	return 0;
//}

//数组-一组想同类型的集合
//int main(){
//	int arr[10] = { 1,2,3,4,5,6,7,8,9,0, };//定义一个存放10个整数数字的集合//数组元素的下标从0开始
//	char ch[20] ;//定义一个存放20个整型的集合
//	float arr2[10];//定义一个存放10个浮点型的集合
//	printf("%d\n", arr[4]);//打印第4个数//以下标的方式访问元素
//	//打印下标为0-9的数
//	int i = 0;
//	while (i < 10) 
//	{
//		printf("%d\n",arr[i]);
//		i++;
//	}
//	return 0;
//}

